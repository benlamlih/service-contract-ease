// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: students.sql

package repository

import (
	"context"

	"github.com/google/uuid"
)

const getAllStudents = `-- name: GetAllStudents :many
SELECT id, name, classroom_id
FROM students
`

func (q *Queries) GetAllStudents(ctx context.Context) ([]Student, error) {
	rows, err := q.db.Query(ctx, getAllStudents)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Student
	for rows.Next() {
		var i Student
		if err := rows.Scan(&i.ID, &i.Name, &i.ClassroomID); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getStudentByID = `-- name: GetStudentByID :one
SELECT id, name, classroom_id
FROM students
WHERE id = $1
`

func (q *Queries) GetStudentByID(ctx context.Context, id uuid.UUID) (Student, error) {
	row := q.db.QueryRow(ctx, getStudentByID, id)
	var i Student
	err := row.Scan(&i.ID, &i.Name, &i.ClassroomID)
	return i, err
}
